name: Upload build artifacts
on:
  push:
    branches:
      - main
      - release/**
      - jb/build/add-prebuild-arch
  workflow_dispatch:
    inputs:
      commit:
        description: If the commit you want to test isn't the head of a branch, provide its SHA here
        required: false
jobs:
  precompile-bindings:
    name: ${{ matrix.os }} (node=${{ matrix.node || matrix.container }}, arch=${{ matrix.arch || matrix.container }})
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # linux x64
          - os: ubuntu-22.04
            container: node:14-alpine3.17
          - os: ubuntu-22.04
            container: node:16-alpine3.17
          - os: ubuntu-22.04
            container: node:18-alpine3.17
            # macos x64
          - os: macos-11
            node: 14
            arch: x64
          - os: macos-11
            node: 16
            arch: x64
          - os: macos-11
            node: 18
            arch: x64
            # windows x86 
            # We are not precompiling binaries for node v14 on windows x86 and x64
            # because the combined size of those two binaries is 2x the size of all the
            # other binaries combined.
          - os: windows-2019
            node: 16
            arch: x86
          - os: windows-2019
            node: 18
            arch: x86
            # windows x64
          - os: windows-2019
            node: 16
            arch: x64
          - os: windows-2019
            node: 18
            arch: x64
          # For some reason it seems like it takes forever for 
          # the macos-m1 runners to start up, so we'll just skip it
          # - os: macos-m1
          #   node: 18
          #   arch: arm64
    # Build artifacts are only needed for releasing workflow.
    # if: startsWith(github.ref, 'refs/heads/release/')
    # alpine build dependencies
    steps:
      - name: build_dependencies (alpine)
        if: contains(matrix.container, 'alpine')
        run: |
          apk add build-base python3
          echo $(ldd --version)

      - name: Check out current commit
        uses: actions/checkout@v3
        with:
          ref: ${{ env.HEAD_COMMIT }}

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.arch }}

      - name: Install dependencies
        run: npm install --unsafe-perm

      - name: Configure gyp
        run: npm run build:configure

      - name: Build bindings
        run: npm run build:bindings

      - name: Test
        run: npm run test
      
      - name: Copy Binary
        run: node scripts/copy-target.js
      
      - name: Log binary
        run: du -sh binaries/*

      - name: Archive binary
        uses: actions/upload-artifact@v3
        with:
          name: binaries-${{ github.sha }}
          path: |
            ${{ github.workspace }}/binaries/

  build-and-pack:
    runs-on: ubuntu-latest
    needs: [precompile-bindings]
    # Build artifacts are only needed for releasing workflow.
    if: startsWith(github.ref, 'refs/heads/release/')
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 18

      - run: npm ci

      - run: npm run build:lib

      - uses: actions/download-artifact@v3
        with: 
          name: binaries-${{ github.sha }}
          path: binaries
      - run: ls -l binaries
      - run: npm pack

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: |
            ${{ github.workspace }}/*.tgz

